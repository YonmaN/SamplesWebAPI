<div class="samples-panel-group panel-group">
	<div class="panel pull-left"><div class="panel-body">
		<h2><?php echo $this->translate('Get Monitor Event Information') // TRANSLATE ?></h2>
		<p><?php echo sprintf($this->translate('Zend Server is not only a Continuous Delivery platform, it is also a problem detection and research platform. The Monitor component detects and records errors, performance problems and keeps watch over other Zend components as well. Any such system event is recorded with all associated and environment information to give a developer all the information he needs to pinpoint and resolve the issue.')) // TRANSLATE ?></p>
		<p><?php echo $this->translate('An event\'s full details are available through the Web API and can be used to find out what exactly happened, retrieve more information using other Web API requests and retrieve associated codetracing packages.') // TRANSLATE ?></p>
	
		<h3><?php echo $this->translate('monitorGetIssueDetails: Input Parameters') // TRANSLATE ?></h3>
		<p><?php echo sprintf($this->translate('monitorGetIssueDetails accepts two parameters - the issueId to retrieve information for and a limit on the number of event groups (event instances) to be retrieved in this request.')) // TRANSLATE ?></p>
		<p><?php echo sprintf($this->translate('The issueId variable can be found in a listing Web API action such as %smonitorGetIssuesByPredefinedFilter%s.'), '<a href="http://files.zend.com/help/Zend-Server/zend-server.htm#monitorgetissueslistbypredefinedfilter.htm" target="_blank">', '</a>') // TRANSLATE ?></p>
		<h3><?php echo $this->translate('monitorGetIssueDetails: Output Structure') // TRANSLATE ?></h3>
		<p><?php echo $this->translate('The Web API action monitorGetIssueDetails returns all available information about the event and about its aggregated event groups. Event groups are aggregates of identical instances of the same event, which are created in order to cut down on space requirements for storing information.') // TRANSLATE ?></p>
		<h4><?php echo $this->translate('The response is composed of a few strucutures:') // TRANSLATE ?></h4>
		<ul>
			<li><?php echo $this->translate('The issue element contains most basic and meta information about the event and the php environment in which it happened. This information is common to all associated Event Groups. Such information includes the Monitor Rule that generated the event, its last occurence timestamp, the number of times the event happened and associated codetracing package information.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('The generalDetails element contains details about the exact location of the error within the application - filepath, line number, the php error code, etc.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('The eventsGroup elements listed as part of the issue provide occurence-specific information such as concrete execution time and timestamp.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('The whatHappenedDetails element contains the some of the information found in the first associated eventsGroup element.') // TRANSLATE ?></li>
		</ul>
		<h3><?php echo $this->translate('monitorGetIssueDetails Common uses') // TRANSLATE ?></h3>
		<ul>
			<li><?php echo $this->translate('This action combines elements from the more detailed Event Groups Web API actions with surface information available in issues listing Web API actions. It acts as a good middle ground to either retrieve more high resolution details or to collect more symptomatic details before digging in.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('IssueDetails also returns the number of event groups found - a simplistic indicator of the intensity of the issue, as a traffic heavy page may produce many of these events.') // TRANSLATE ?></li>
		</ul>
		<h3><?php echo $this->translate('Getting even more detailed information') // TRANSLATE ?></h3>
		<ul>
			<li><?php echo sprintf($this->translate('You can retrieve more event groups using the %smonitorGetIssueEventGroups Web API action%s which allows you to retrieve lists limited to a number of rows but also adds offset control for pagination.'),'<a href="http://files.zend.com/help/Zend-Server/zend-server.htm#monitorgetissueeventgroups.htm" target="_blank">', '</a>' ) // TRANSLATE ?></li>
			<li><?php echo sprintf($this->translate('You can get more specific environment information using the %smonitorGetEventGroupDetails Web API action%s. This action provides a list of PHP Super Globals\' values and other useful information about the moment the event was recorded.'),'<a href="http://files.zend.com/help/Zend-Server/zend-server.htm#monitorgeteventgroupdetails.htm" target="_blank">', '</a>' ) // TRANSLATE ?></li>
		</ul>
	</div></div>
	<div class="panel pull-left"><div class="panel-body">
		<h2><?php echo $this->translate('Web API request example') // TRANSLATE ?></h2>
		<h3><?php echo $this->translate('Request example') // TRANSLATE ?></h3>
		<div class="source-panel highlighted-source-panel"><?php echo highlight_string("<?php\n\$client = new \WebAPI\Http\Client(
	'http://localhost:10081/ZendServer/Api/monitorGetIssueDetails',
	array(
		'issueId' => '12',
		'limit' => '10',
	));

\$response = \$client->send()->getBody();", true) ?></div>
		<h3><?php echo $this->translate('Example response') // TRANSLATE ?></h3>
		<div id="monitor_get_issue_details-output-panel" class="source-panel"><code><?php echo nl2br(str_replace(' ','&nbsp',htmlentities(
<<<ISSUEDETAILS
<zendServerAPIResponse xmlns="http://www.zend.com/server/api/1.7">
 <requestData>
  <apiKeyName><![CDATA[admin]]></apiKeyName>
  <method>monitorGetIssueDetails</method>
 </requestData>
 <responseData>
  <issueDetails>
   <issue>
    <id>77</id>
    <eventType>6</eventType>
    <rule><![CDATA[PHP Error]]></rule>
    <count>1</count>
    <lastOccurance>2014-01-02T13:23:06+02:00</lastOccurance>
    <lastOccuranceTimestamp>1388661786</lastOccuranceTimestamp>
    <severity>Critical</severity>
    <status>Open</status>
    <hasCodetracing>true</hasCodetracing>
    <codeTracingEventGroupId></codeTracingEventGroupId>    
    <ruleId>8</ruleId>      
    <generalDetails>
     <url><![CDATA[http://localhost/samples/application/Simple/EventInfo]]></url>
     <baseUrl><![CDATA[]]></baseUrl>
     <sourceFile><![CDATA[/usr/local/zend/var/apps/http/__default__/0/samples/1.0.0_6/public/index.php]]></sourceFile>
     <sourceLine>17</sourceLine>
     <function><![CDATA[Zend\Mvc\Application::init]]></function>
     <customEventClass><![CDATA[]]></customEventClass>
     <aggregationHint></aggregationHint>
     <errorString><![CDATA[Uncaught exception 'Zend\ServiceManager\Exception\InvalidArgumentException' with message 'Provided abstract factory must be the class name of an abstract factory or an instance of an AbstractFactoryInterface.']]></errorString>
     <errorType>E_ERROR</errorType>
    </generalDetails>
    <whatHappenedDetails>    <eventsGroupId>77</eventsGroupId>
    <eventsCount>1</eventsCount>
    <startTime>2014-01-02T13:23:06+02:00</startTime>
    <startTimeTimestamp>1388661786</startTimeTimestamp>
    <serverId>0</serverId>
    <class></class>
    <hasCodetracing>true</hasCodetracing>
    <userData><![CDATA[]]></userData>
    <javaBacktrace><![CDATA[]]></javaBacktrace>
    <execTime>0</execTime>
    <avgExecTime>0</avgExecTime>
    <relExecTime>0</relExecTime>
    <memUsage>0</memUsage>
    <avgMemUsage>0</avgMemUsage>
    <relMemUsage>0</relMemUsage>
    <avgOutputSize>0</avgOutputSize>
    <relOutputSize>0</relOutputSize>
    <load>0</load></whatHappenedDetails>   
    <appName></appName>
    <appId></appId>
    <routeDetails></routeDetails>
   </issue>
   <eventsGroups>
    <eventsGroup>
     <eventsGroupId>77</eventsGroupId>
     <eventsCount>1</eventsCount>
     <startTime>2014-01-02T13:23:06+02:00</startTime>
     <startTimeTimestamp>1388661786</startTimeTimestamp>
     <serverId>0</serverId>
     <serverName>yonni-desktop</serverName>   
     <class></class>
     <hasCodetracing>true</hasCodetracing>
     <userData><![CDATA[]]></userData>
     <javaBacktrace><![CDATA[]]></javaBacktrace>
     <execTime>0</execTime>
     <relExecTime>0</relExecTime>
     <memUsage>0</memUsage>
     <relMemUsage>0</relMemUsage>
     <relOutputSize>0</relOutputSize>
     <load>0</load>
    </eventsGroup>
   </eventsGroups>
   <totalCount>1</totalCount>
  </issueDetails>
 </responseData></zendServerAPIResponse>
ISSUEDETAILS
))) ?>
		</code></div>
	</div></div>
</div>