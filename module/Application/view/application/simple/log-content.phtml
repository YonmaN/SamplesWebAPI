<div class="samples-panel-group panel-group">
	<div class="panel pull-left"><div class="panel-body">
		<h2><?php echo $this->translate('Get Log File Content') // TRANSLATE ?></h2>
		<p><?php echo sprintf($this->translate('Monitor events are not the only way to find out about problems in Zend Server. PHP error and other logs are all available for retrieval through the Zend Server Web API. The logsReadLines method allows you to retrieve a set number of records from the log\'s tail and also filter the information to narrow it down.')) // TRANSLATE ?></p>
		<p><?php echo $this->translate('Several log files are available to retrieve from, the one most immediately interesting is the PHP error log file which will collect notices, warnings and errors triggered by PHP on during execution.') // TRANSLATE ?></p>
	
		<h3><?php echo $this->translate('logsReadLines: Input Parameters') // TRANSLATE ?></h3>
		<p><?php echo sprintf($this->translate('logsReadLines accepts a few parameters - the logName parameter allows you to specify which log to retrieve from a list of %spreset names%s.'), '<a href="http://files.zend.com/help/Zend-Server/zend-server.htm#the_logsreadlines_method.htm" target="_blank">','</a>') // TRANSLATE ?></p>
		<p><?php echo sprintf($this->translate('The linesToRead parameter allows you to specify the number of log entries to retrieve. This parameter is capped by the system setting zend_gui.maxLineChunk, default is 10000.')) // TRANSLATE ?></p>
		<p><?php echo sprintf($this->translate('The serverId optional parameter sets the server (within a cluster) to use for retrieving the log. On a single server environment you may only set the serverId to 0.')) // TRANSLATE ?></p>
		<p><?php echo sprintf($this->translate('The filter optional parameter provides a text pattern to use for filtering the log entries.')) // TRANSLATE ?></p>
		<h3><?php echo $this->translate('logsReadLines: Output Structure') // TRANSLATE ?></h3>
		<p><?php echo $this->translate('Two elements are returned as output for this action:') // TRANSLATE ?></p>
		<ul>
			<li><?php echo $this->translate('The logFileMetaData provides you with somet basic details about the log file and its properties.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('The logFileLines are provided as-is in a text node element.') // TRANSLATE ?></li>
		</ul>
		<h3><?php echo $this->translate('logsReadLines Common uses') // TRANSLATE ?></h3>
		<ul>
			<li><?php echo $this->translate('This action can be used to sample a server\'s log for errors when the Monitor is not available (e.g. on production performance sensitive systems).') // TRANSLATE ?></li>
			<li><?php echo $this->translate('Besides the PHP error log, quite a few other logs are out there and can be sampled. These include all of the Zend Server components, daemons and ui logs.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('Note that in some cases you may have to loosen some file access permissions for Zend Server to read a particular log.') // TRANSLATE ?></li>
		</ul>
	</div></div>
	<div class="panel pull-left"><div class="panel-body">
		<h2><?php echo $this->translate('Web API request example') // TRANSLATE ?></h2>
		<h3><?php echo $this->translate('Request example') // TRANSLATE ?></h3>
		<div class="source-panel highlighted-source-panel"><?php echo highlight_string("<?php\n\$client = new \WebAPI\Http\Client(
	'http://localhost:10081/ZendServer/Api/logsReadLines',
	array(
		'logName' => 'php'
	));

\$response = \$client->send()->getBody();", true) ?></div>
		<h3><?php echo $this->translate('Example response') // TRANSLATE ?></h3>
		<div id="log_read_lines-output-panel" class="source-panel"><code><?php echo nl2br(str_replace(' ','&nbsp',htmlentities(
<<<LOGENTRIES
<?xml version="1.0" encoding="UTF-8"?>
<zendServerAPIResponse xmlns="http://www.zend.com/server/api/1.3">
 <requestData>
  <apiKeyName><![CDATA[Admin]]></apiKeyName>
  <method>logsReadLines</method>
 </requestData>
 <responseData>
  <logFileMetaData>
   <lineNumber>896</lineNumber>
   <fileSize>152124</fileSize>
   <lastModified>2012-07-30T07:44:27+00:00</lastModified>
  </logFileMetaData>
  <logFileLines><![CDATA[[31-Dec-2013 13:54:33 Africa/Blantyre] PHP Notice:  Undefined variable: star in /usr/local/zend/tmp/zdd/.Lh4851/gstats.php on line 136
                         [31-Dec-2013 13:54:36 Africa/Blantyre] PHP Notice:  Undefined variable: star in /usr/local/zend/tmp/zdd/.Lh4851/gstats.php on line 179
                         [31-Dec-2013 13:54:36 Africa/Blantyre] PHP Notice:  Undefined variable: star in /usr/local/zend/tmp/zdd/.Lh4851/gstats.php on line 220
  ]]>
  </logFileLines>
 </responseData>
</zendServerAPIResponse>
LOGENTRIES
))) ?>
		</code></div>
	</div></div>
</div>