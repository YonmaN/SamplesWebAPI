<div class="samples-panel-group panel-group">
	<div class="panel pull-left"><div class="panel-body">
		<h2><?php echo $this->translate('Polling Zend Server Tasks') // TRANSLATE ?></h2>
		<p><?php echo sprintf($this->translate('Zend Server\'s execution of some actions is not straightforward and immediate. Some WebAPI actions, particularly those that change configuration or add new applications take too long to have a client wait for a complete response. Other actions can take an indefinite amount of time because they rely on external services.')) // TRANSLATE ?></p>
		<p><?php echo $this->translate('These actions are tracked internally as Zend Server Tasks and can also be tracked by the client.') // TRANSLATE ?></p>
		<p><?php echo $this->translate('Tasks are tracked using a WebAPI action called tasksComplete, which returns true when all tasks are completed.') // TRANSLATE ?></p>
		<p><?php echo $this->translate('Note that you can call consecutive actions without polling - those actions are stored in a queue and will be processed in-order.') // TRANSLATE ?></p>
	
		<h3><?php echo $this->translate('tasksComplete: Input Parameters') // TRANSLATE ?></h3>
		<p><?php echo sprintf($this->translate('The tasksComplete action is usually called without parameters. This input state specifies a check that no Tasks remain in the queue for Zend Server to process.')) // TRANSLATE ?></p>
		<p><?php echo sprintf($this->translate('The "servers" parameter is an array of serverIds to filter the tasks by. This replaces the default of "all servers" and lets you limit your polling to specific cluster members.')) // TRANSLATE ?></p>
		<p><?php echo sprintf($this->translate('The "tasks" parameter is an array of taskIds - unique identifiers of specific tasks within the system. Using this parameter you can limit your polling to particular tasks within the queue.')) // TRANSLATE ?></p>
		<h3><?php echo $this->translate('tasksComplete: Output Structure') // TRANSLATE ?></h3>
		<p><?php echo $this->translate('The action returns a final "completed" boolean indicator and a per-server distribution of completion:') // TRANSLATE ?></p>
		<ul>
			<li><?php echo $this->translate('The tasksComplete element is a final at-a-glance flag that indicates if the system is at rest or not. A true for this element means there are no tasks, unless you\'ve specifically added filters to your request.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('The tasksPerServer element contains a list of server completion flags. A completion flag set to true in this element indicates the specific server has no tasks to execute.') // TRANSLATE ?></li>
		</ul>
		<h3><?php echo $this->translate('tasksComplete Common uses') // TRANSLATE ?></h3>
		<p><?php echo $this->translate('Polling for tasks is usually done after an asynchronous action is called. These actions return a 202 http response code to indicate that they have not been completed yet, even though a response is already provided.') // TRANSLATE ?></p>
		<ul>
			<li><?php echo $this->translate('Tracking Tasks lets you know for certain when your system has stabilized again to be restarted or for other actions to be called.') // TRANSLATE ?></li>
			<li><?php echo $this->translate('Polling a Task following a particular action can be a fair indicator of when the task was completed.') // TRANSLATE ?></li>
		</ul>
	</div></div>
	<div class="panel pull-left"><div class="panel-body">
		<h2><?php echo $this->translate('WebAPI request example') // TRANSLATE ?></h2>
		<h3><?php echo $this->translate('Request example') // TRANSLATE ?></h3>
		<div class="source-panel highlighted-source-panel"><?php echo highlight_string("<?php\n\$client = new \WebAPI\Http\Client(
	'http://localhost:10081/ZendServer/Api/tasksComplete',
	array());

\$response = \$client->send()->getBody();", true) ?></div>
		<h3><?php echo $this->translate('Example response') // TRANSLATE ?></h3>
		<div id="tasks_complete-output-panel" class="source-panel"><code><?php echo nl2br(str_replace(' ','&nbsp',htmlentities(
<<<TASKSCOMPLETE
<?xml version="1.0" encoding="UTF-8"?>
<zendServerAPIResponse xmlns="http://www.zend.com/server/api/1.0">
 <requestData>
   <apiKeyName>angel.eyes</apiKeyName>
   <method>tasksComplete</method>
 </requestData>
 <responseData>
   <tasksComplete>false</tasksComplete>
   <tasksPerServer>
     <serverComplete>
       <serverId>0</serverId>
       <complete>false</complete>
     </serverComplete>
   </tasksPerServer>
 </responseData>
</zendServerAPIResponse>
TASKSCOMPLETE
))) ?>
		</code></div>
		<h3><?php echo $this->translate('tasksComplete in the wild') // TRANSLATE ?></h3>
		<p><?php echo $this->translate('tasksComplete in and of itself is not that interesting. However, coupled with other actions such as restartPhp or other actions, it can be used for implementing a responsive interface.') // TRANSLATE ?></p>
		<p><?php echo $this->translate('Other pages in the Advanced Workflows part of this application will provide examples for using tasksComplete in a more functional way.') // TRANSLATE ?></p>
		<p><?php echo $this->translate('Note that currently you may not create your own Zend Server Tasks and can only use the existing tasks provided by Zend Server.') // TRANSLATE ?></p>
	</div></div>
</div>